import { CartItemDTO } from "@/services/dto/cart.dto";
import React from "react";

interface Props {
  orderId: number;
  items: CartItemDTO[];
  totalAmount: number;
}

const DELIVERY_PRICE = 250; // –°—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏ –≤ —Ä—É–±–ª—è—Ö
const TAX_RATE = 0.15; // –ù–∞–ª–æ–≥ 15%

export const OrderSuccessTemplate: React.FC<Props> = ({
  orderId,
  items,
  totalAmount,
}) => {
  // –°—á–∏—Ç–∞–µ–º —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–æ–≤
  const itemsTotal = items.reduce(
    (acc, item) => acc + item.productItem.price * item.quantity,
    0
  );

  // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –Ω–∞–ª–æ–≥–∏ –∏ –¥–æ—Å—Ç–∞–≤–∫—É
  const taxAmount = Math.round(itemsTotal * TAX_RATE);
  const deliveryAmount = itemsTotal > 0 ? DELIVERY_PRICE : 0;

  return (
    <div>
      <h1>–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–∫—É–ø–∫—É! üéâ</h1>

      <p>–í–∞—à –∑–∞–∫–∞–∑ #{orderId} –æ–ø–ª–∞—á–µ–Ω. –°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤:</p>

      <hr />

      <ul>
        {items.map((item) => (
          <li key={item.id}>
            {item.productItem.product.name} | {item.productItem.price} ‚ÇΩ x{" "}
            {item.quantity} —à—Ç. = {item.productItem.price * item.quantity} ‚ÇΩ
          </li>
        ))}
      </ul>

      <hr />

      <table style={{ width: "100%", marginTop: "20px" }}>
        <tbody>
          <tr>
            <td>–°—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–æ–≤:</td>
            <td style={{ textAlign: "right" }}>{itemsTotal} ‚ÇΩ</td>
          </tr>
          <tr>
            <td>–ù–∞–ª–æ–≥ (15%):</td>
            <td style={{ textAlign: "right" }}>{taxAmount} ‚ÇΩ</td>
          </tr>
          <tr>
            <td>–î–æ—Å—Ç–∞–≤–∫–∞:</td>
            <td style={{ textAlign: "right" }}>{deliveryAmount} ‚ÇΩ</td>
          </tr>
          <tr style={{ borderTop: "2px solid #000", fontWeight: "bold" }}>
            <td>–ò—Ç–æ–≥–æ:</td>
            <td style={{ textAlign: "right" }}>{totalAmount} ‚ÇΩ</td>
          </tr>
        </tbody>
      </table>
    </div>
  );
};
